name: Run tests

inputs:
  python-version:
    required: true
    type: string
  runtime-version:
    required: true
    type: string
  dtype-asserts:
    required: false
    type: boolean
    default: false
  expecttest-accept:
    required: false
    type: boolean
    default: false
  ref-eager:
    required: false
    type: boolean
    default: false

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ inputs.python-version }}
        enable-cache: true

    - name: Create virtual environment
      run: |
        uv venv --python ${{ inputs.python-version }}

    - name: Get current month
      id: date
      run: echo "month=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          ~/.venv
        key: ${{ inputs.python-version }}-${{ inputs.runtime-version }}-${{ hashFiles('.github/workflows/test.yml', 'requirements.txt') }}-${{ steps.date.outputs.month }}

    - name: Install PyTorch
      run: |
        source .venv/bin/activate
        uv pip install -U --pre torch --index-url https://download.pytorch.org/whl/nightly/${{ inputs.runtime-version }}

    - name: Install Triton
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        set -x
        source .venv/bin/activate
        apt-get update
        apt-get install -y git
        apt-get install -y clang-14 clang++-14 zlib1g-dev
        export CC=clang-14
        export CXX=clang++-14
        mkdir -p /tmp/$USER
        cd /tmp/$USER
        uv pip uninstall triton pytorch-triton || true
        rm -rf triton/ || true
        git clone https://github.com/triton-lang/triton.git
        cd triton/
        uv pip install -r python/requirements.txt
        MAX_JOBS=$(nproc) TRITON_PARALLEL_LINK_JOBS=2 uv pip install .
        cd /tmp/$USER
        rm -rf triton/
        python -c "import triton; print(f'Triton version: {triton.__version__}')"

    - name: Install Requirements
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
        uv pip install pytest-timeout

    - name: Run Tests
      run: |
        source .venv/bin/activate
        # Conditionally enable ref-eager and golden-accept/dtype-assert test modes
        if [[ "${{ inputs.dtype-asserts }}" == "true" ]]; then export HELION_DEBUG_DTYPE_ASSERTS=1; fi
        if [[ "${{ inputs.expecttest-accept }}" == "true" ]]; then export EXPECTTEST_ACCEPT=1; fi
        if [[ "${{ inputs.ref-eager }}" == "true" ]]; then export HELION_INTERPRET=1; fi
        pytest --timeout=30
